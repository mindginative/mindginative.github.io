<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Nodejs on Richard Sentino via mindginative</title>
    <link>http://www.mindginative.com/tags/nodejs/index.xml</link>
    <description>Recent content in Nodejs on Richard Sentino via mindginative</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="http://www.mindginative.com/tags/nodejs/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>No Fuss, NodeJS LTS installation on Raspbian Lite Jessie</title>
      <link>http://www.mindginative.com/post/no-fuss-nodejs-lts-on-raspbian-lite-jessie/</link>
      <pubDate>Sat, 18 Mar 2017 21:56:03 +1300</pubDate>
      
      <guid>http://www.mindginative.com/post/no-fuss-nodejs-lts-on-raspbian-lite-jessie/</guid>
      <description>

&lt;h2 id=&#34;copy-paste-trust-me&#34;&gt;Copy &amp;amp; Paste, trust me!&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$&amp;gt; sudo apt-get update
$&amp;gt; sudo apt-get upgrade
$&amp;gt; sudo apt-get -y install git
$&amp;gt; curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.1/install.sh | bash
$&amp;gt; source ~/.bashrc
$&amp;gt; nvm install --lts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;as of this writing my NodeJS LTS version: &lt;code&gt;v6.10.0&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;what-s-the-fuss&#34;&gt;What&amp;rsquo;s  The Fuss?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;Node Version Manager (nvm)&lt;/a&gt; gets installed, we&amp;rsquo;ll then use it to install whatever is the current &lt;a href=&#34;https://github.com/nodejs/LTS&#34;&gt;NodeJS LTS&lt;/a&gt; - primarily behind the scenes, it will spear you from crap of load of these commands:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;tax -xvf **armv1**.xz, cd, sudo cp -R /blah/blah/path, rm /some/dir,...&lt;/code&gt;&lt;/p&gt;

&lt;h2 id=&#34;got-proof&#34;&gt;Got Proof ?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://www.mindginative.com/images/rpi-nodejs-raspbian-lite-jessie.jpg&#34; width=&#34;600&#34;&gt;&lt;/p&gt;

&lt;h2 id=&#34;got-issues-or-better-tips&#34;&gt;Got Issues, or better tips ?&lt;/h2&gt;

&lt;p&gt;yell out, I&amp;rsquo;d highly appreciate and always happy hear! Thanks&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>NodeJS &#43; Cron: A series of attempts in getting rid of dangling processes</title>
      <link>http://www.mindginative.com/post/nodejs-cron-getting-rid-of-dangling-processes/</link>
      <pubDate>Mon, 20 Feb 2017 20:47:01 +1300</pubDate>
      
      <guid>http://www.mindginative.com/post/nodejs-cron-getting-rid-of-dangling-processes/</guid>
      <description>

&lt;p&gt;Short-lived scripts that sucked your resources for 1mins or at most 5mins - is probably fine.
However, if it is recurring jobs in Cron and involves several tasks and at least an hour of processing - that&amp;rsquo;d be a different story.&lt;/p&gt;

&lt;p&gt;I was working on a simple NodeJS-based cron script with only 3 requirements:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;extract&lt;/li&gt;
&lt;li&gt;transform&lt;/li&gt;
&lt;li&gt;load&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each one of these however would involve crunching through a million rows of data.&lt;/p&gt;

&lt;p&gt;If you take a closer look at the result of &lt;code&gt;ps aux&lt;/code&gt; command, you&amp;rsquo;ll notice that there are couple of dangling processes waiting for some event to complete - of which technically the parent process doesn&amp;rsquo;t exists anymore! - the dates would tell you that some of those process had been there for about 9 days.&lt;/p&gt;

&lt;p&gt;the script runs on top of AWS EC2 instance so literally we&amp;rsquo;re talking about:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;CPU ticks, RAM usage, disk spins, etc == &lt;strong&gt;$$$&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If left unattended this would turn into a zombie manufacturing plant. Anyhow, see the command output below.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;$&amp;gt; ps aux&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root      6934  0.0  0.0  59636   448 ?        S    Feb10   0:00 CRON
ubuntu    7005  0.0  0.0   4440   104 ?        Ss   Feb10   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu    7008  0.0  0.0  11112   180 ?        S    Feb10   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu    7094  0.0  0.0   4444   108 ?        S    Feb10   0:00 sh -c npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task
ubuntu    7095  0.0  0.1 574624  5924 ?        Sl   Feb10   0:00 npm run export-task
ubuntu   15536  0.0  0.0   4440   104 ?        Ss   Feb18   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu   15557  0.0  0.0  11112   176 ?        S    Feb18   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu   19398  0.0  0.0   4440   100 ?        Ss   Feb11   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu   19399  0.0  0.0  11112   192 ?        S    Feb11   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu   19410  0.0  0.0   4444   108 ?        S    Feb11   0:00 sh -c npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task
ubuntu   19421  0.0  0.0   4444   108 ?        S    Feb11   0:00 sh -c node ./js/cron-script.js export-task
ubuntu   19422  0.0  1.1 839088 44164 ?        Sl   Feb11   0:01 node ./js/cron-script.js export-task
ubuntu   25683  0.0  0.0   4440   100 ?        Ss   Feb14   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu   25684  0.0  0.0  11112   188 ?        S    Feb14   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu   25712  0.0  0.0   4444   104 ?        S    Feb14   0:00 sh -c npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task
ubuntu   25723  0.0  0.0   4444   104 ?        S    Feb14   0:00 sh -c node ./js/cron-script.js export-task
ubuntu   25724  0.0  2.6 964268 102912 ?       Sl   Feb14   0:02 node ./js/cron-script.js export-task
ubuntu   26093  0.0  0.0   4440   100 ?        Ss   Feb14   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu   26094  0.0  0.0  11112   188 ?        S    Feb14   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu   26107  0.0  0.0   4444   108 ?        S    Feb14   0:00 sh -c npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task
ubuntu   26118  0.0  0.0   4444   108 ?        S    Feb14   0:00 sh -c node ./js/cron-script.js export-task
ubuntu   26119  0.0  1.5 929424 60320 ?        Sl   Feb14   0:01 node ./js/cron-script.js export-task
ubuntu   26511  0.0  0.0   4440   104 ?        Ss   Feb09   0:00 /bin/sh -c /home/ubuntu/crontools/cron-script-wrapper.sh &amp;gt; /dev/null 2&amp;gt;&amp;amp;1
ubuntu   26512  0.0  0.0  11112   188 ?        S    Feb09   0:00 /bin/bash /home/ubuntu/crontools/cron-script-wrapper.sh
ubuntu   26523  0.0  0.0   4444   108 ?        S    Feb09   0:00 sh -c npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task
ubuntu   26534  0.0  0.0   4444   104 ?        S    Feb09   0:00 sh -c node ./js/cron-script.js export-task
ubuntu   26535  0.0  0.7 601220 28212 ?        Sl   Feb09   0:01 node ./js/cron-script.js export-task
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;On the day when the script was loaded onto crontab and didn&amp;rsquo;t get was I was hoping for, my gut tells me that I f***ed up Cron: bad syntax or wasn&amp;rsquo;t throwing the logs properly, why? you asked! - having passed the &amp;ldquo;&lt;a href=&#34;https://blog.codinghorror.com/the-works-on-my-machine-certification-program/&#34;&gt;Works on My Machine&lt;/a&gt;&amp;rdquo; certification program I could run the script manually at sucess rate of 100%.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;¯\_(ツ)_/¯&lt;/p&gt;

&lt;p&gt;E-V-E-R-Y-T-H-I-N-G WORKS!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;unsuccessful-attempts&#34;&gt;Unsuccessful Attempts&lt;/h3&gt;

&lt;h4 id=&#34;1st-attempt&#34;&gt;1st attempt:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;* * * * * * cd /to/script/folder &amp;amp;&amp;amp; npm run export-task &amp;amp;&amp;amp; npm run transform-task &amp;amp;&amp;amp; npm run load-task 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;2nd-attempt&#34;&gt;2nd attempt:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;* * * * * * cd /to/script/folder &amp;amp;&amp;amp; npm run-task-in-sequence 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;3rd-attempt&#34;&gt;3rd attempt:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;* * * * * * cd /to/script/folder &amp;amp;&amp;amp; ./script-wrapper.sh 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;script-wrapper.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

npm run export-task
npm run transform-task
npm run load-task

exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;successful-attempts&#34;&gt;Successful Attempts&lt;/h3&gt;

&lt;h4 id=&#34;4th-attempt&#34;&gt;4th attempt:&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;* * * * * * cd /to/script/folder &amp;amp;&amp;amp; ./script-wrapper.sh 2&amp;gt;&amp;amp;1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;script-wrapper.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

node ./cron-script.js export-task
node ./cron-script.js transform-task
node ./cron-script.js load-task

exit 0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Not relying on running &lt;a href=&#34;https://docs.npmjs.com/cli/run-script&#34;&gt;arbitrary commands&lt;/a&gt; in npm did fixed the issue.&lt;/p&gt;

&lt;h3 id=&#34;notes&#34;&gt;Notes&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;The issue did went away on the 4th attempt but it still needs a lot of explaining because the main issue occurs only inside AWS/EC2 machine. I couldn&amp;rsquo;t replicate the issue on a Docker machine&lt;/li&gt;
&lt;li&gt;I forgot to get the snapshot of the real zombie process, see [1]&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;references&#34;&gt;References&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;[1] &lt;a href=&#34;https://www.howtogeek.com/119815/htg-explains-what-is-a-zombie-process-on-linux/&#34;&gt;https://www.howtogeek.com/119815/htg-explains-what-is-a-zombie-process-on-linux/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[2] &lt;a href=&#34;https://docs.npmjs.com/cli/run-script&#34;&gt;https://docs.npmjs.com/cli/run-script&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;[3] &lt;a href=&#34;https://blog.codinghorror.com/the-works-on-my-machine-certification-program/&#34;&gt;https://blog.codinghorror.com/the-works-on-my-machine-certification-program/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>NodeJS Development Inside Docker on Windows 10</title>
      <link>http://www.mindginative.com/post/nodejs-development-inside-docker-with-windows10/</link>
      <pubDate>Wed, 15 Feb 2017 16:39:23 +1300</pubDate>
      
      <guid>http://www.mindginative.com/post/nodejs-development-inside-docker-with-windows10/</guid>
      <description>

&lt;h2 id=&#34;wait-what&#34;&gt;Wait, what ?&lt;/h2&gt;

&lt;p&gt;Moving to Windows10 (6 months ago as of this writing) as my main OS is a bit hard, just a little bit.
I use commandline &lt;strong&gt;ALL THE TIME&lt;/strong&gt; and I can&amp;rsquo;t live without the developer&amp;rsquo;s Swiss army knife on my side - tiny tools that make our life easier: &lt;em&gt;grep&lt;/em&gt;, &lt;em&gt;sed&lt;/em&gt;, &lt;em&gt;ps&lt;/em&gt;, &lt;em&gt;tree&lt;/em&gt;, &lt;em&gt;ssh&lt;/em&gt;, &lt;em&gt;find&lt;/em&gt; &amp;hellip;&lt;/p&gt;

&lt;p&gt;&amp;ldquo;&lt;em&gt;&lt;a href=&#34;https://msdn.microsoft.com/en-us/commandline/wsl/about&#34;&gt;Bash On Windows&lt;/a&gt;&lt;/em&gt;&amp;rdquo; was a good strategy from Microsoft - I didn&amp;rsquo;t bother about switching to Windows and I didn&amp;rsquo;t think twice, I was more worried about which machine to buy.&lt;/p&gt;

&lt;p&gt;I miss some of the good stuff from MacOS: &lt;a href=&#34;https://brew.sh/&#34;&gt;Homebrew&lt;/a&gt;, &lt;a href=&#34;https://caskroom.github.io/&#34;&gt;Homebrew Cask&lt;/a&gt;, to name a few.
I&amp;rsquo;ll just get a Mac mini for OSX development.&lt;/p&gt;

&lt;h2 id=&#34;frustration-solution&#34;&gt;Frustration &amp;amp; Solution&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;m a member of the &lt;a href=&#34;https://blogs.windows.com/blog/tag/windows-insider-program/&#34;&gt;Windows Insider Program&lt;/a&gt; and their build releases includes fixes to some annoying issues, often with accompanying features.
However, the build release &lt;a href=&#34;https://blogs.windows.com/windowsexperience/2017/02/08/announcing-windows-10-insider-preview-build-15031-pc/&#34;&gt;15031&lt;/a&gt; affected my productivity.
Bash On Windows would hang up and opening up a separate Bash window gives the same result - you can&amp;rsquo;t even close the window nor the running process - this would have been an easy &lt;code&gt;kill -9 &amp;lt;PID&amp;gt;&lt;/code&gt; command in Mac/Linux, the famous ALT + CTRL + DELETE combination is nowhere effective.
NodeJS via NVM wouldn&amp;rsquo;t work at all, see issue &lt;a href=&#34;https://github.com/Microsoft/BashOnWindows/issues/1683&#34;&gt;#1683&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Reboot! yep sometimes 6 reboots in a day&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A rollback to the previous build release was the easiest solution. I hit the button and it works, as &lt;a href=&#34;https://github.com/Microsoft/BashOnWindows/issues/1683#issuecomment-279109940&#34;&gt;Ben Hillis&lt;/a&gt; said of Bash On Windows team:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The rollback feature really is great and doesn&amp;rsquo;t get enough credit. It&amp;rsquo;s saved me a couple times as well.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The hang up went out however there are still minor issues like slowness, etc. It&amp;rsquo;s bearable but I&amp;rsquo;ve already thought of finding an alternative,
one where I could easily jump from different machine and OS eg. MacOS, Linux.&lt;/p&gt;

&lt;h2 id=&#34;docker-docker&#34;&gt;Docker, Docker&lt;/h2&gt;

&lt;p&gt;Enter Docker, I haven&amp;rsquo;t fully utilised this tool since its beta phase. 5 or 6 montsh ago there were issues with mounting folders from host machine inside a container, it was a show stopper for me at that time.
I was following some steps from John Lees-Miller&amp;rsquo;s &amp;ldquo;&lt;a href=&#34;http://jdlm.info/articles/2016/03/06/lessons-building-node-app-docker.html&#34;&gt;Building a Node App in Docker&lt;/a&gt;&amp;rdquo; and everthing works except for mounting a shared folder.&lt;/p&gt;

&lt;p&gt;February 2017, I revisited steps and it works!&lt;/p&gt;

&lt;h3 id=&#34;docker-with-node-version-manager&#34;&gt;Docker with Node Version Manager&lt;/h3&gt;

&lt;p&gt;Here&amp;rsquo;s the slightly modified Docker configuration.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OS: Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;NodeJS: v6.9.2 via NVM&lt;/li&gt;
&lt;li&gt;NVM: v0.33.0&lt;/li&gt;
&lt;li&gt;Docker: 1.13.1 (10072)&lt;/li&gt;
&lt;li&gt;Docker Channel: Stable 94675c5&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Dockerfile&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FROM ubuntu:16.04

# Constants
ENV NVM_VERSION v0.33.0
ENV NODE_VERSION v6.9.2
ENV HOME=/home/app

# Replace shell with bash so we can source files
RUN rm /bin/sh &amp;amp;&amp;amp; ln -s /bin/bash /bin/sh

# add special user called `app`
RUN useradd --user-group --create-home --shell /bin/false app

# Install pre-reqs
RUN apt-get update &amp;amp;&amp;amp; apt-get install -y \
    build-essential \
    checkinstall    \
    libssl-dev      \
    curl

USER app

# Install NVM
RUN curl -o- https://raw.githubusercontent.com/creationix/nvm/${NVM_VERSION}/install.sh | bash

# Install NODE
RUN source ~/.nvm/nvm.sh; \
    nvm install $NODE_VERSION; \
    nvm use --delete-prefix $NODE_VERSION;

USER root
COPY package.json start.sh $HOME/web/
RUN chown -R app:app $HOME/*

USER app
WORKDIR $HOME/web
RUN source ~/.nvm/nvm.sh; \
    nvm use --delete-prefix $NODE_VERSION; \
    npm install;

USER root
COPY . $HOME/web
RUN chown -R app:app $HOME/*

USER app
RUN source ~/.nvm/nvm.sh; \
    nvm use --delete-prefix $NODE_VERSION;

CMD [&amp;quot;./start.sh&amp;quot;]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;docker-compose.yml&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;web:
  build: .
  ports:
    - &#39;8080:8080&#39;
  environment:
    NODE_ENV: dev
  volumes:
    - .:/home/app/web
    - /home/app/web/node_modules
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;start.sh&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

# load NVM environment
source ~/.nvm/nvm.sh
nvm use --delete-prefix v6.9.2

# start server
npm start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Enjoy&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows Insider Build 15031 Broke my NVM NodeJS environment</title>
      <link>http://www.mindginative.com/post/windows-insider-15031-vs-nodejs/</link>
      <pubDate>Sat, 11 Feb 2017 13:14:55 +1300</pubDate>
      
      <guid>http://www.mindginative.com/post/windows-insider-15031-vs-nodejs/</guid>
      <description>

&lt;p&gt;Yesterday 10th of Feb 2017, I managed to update my PC with the latest &lt;a href=&#34;https://blogs.windows.com/windowsexperience/2017/02/08/announcing-windows-10-insider-preview-build-15031-pc/#zQAbyxpwEGLAdWvl.97&#34;&gt;Windows 10 Insider Preview Build 15031&lt;/a&gt;.
The list contains a massive set of features as well as fixes, so I didn&amp;rsquo;t mind the upgrade. It took at least 20mins to get it done. Once done, my NodeJS environment started complaining, btw I am using &lt;a href=&#34;https://github.com/creationix/nvm&#34;&gt;Node Version Manager&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s what I got when switching NodeJS versions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;nvm use v4.3.2
net.js:129
    this._handle.open(options.fd);
                 ^

Error: Unknown system error -25: Unknown system error -25, uv_pipe_open
    at Error (native)
    at new Socket (net.js:129:18)
    at createWritableStdioStream (node.js:601:18)
    at process.stdout (node.js:627:16)
    at module.exports (/home/urix/.nvm/versions/node/v4.3.2/lib/node_modules/npm/node_modules/npmlog/node_modules/set-blocking/index.js:2:11)
    at Object.&amp;lt;anonymous&amp;gt; (/home/urix/.nvm/versions/node/v4.3.2/lib/node_modules/npm/node_modules/npmlog/log.js:11:1)
    at Module._compile (module.js:409:26)
    at Object.Module._extensions..js (module.js:416:10)
    at Module.load (module.js:343:32)
    at Function.Module._load (module.js:300:12)
nvm is not compatible with the npm config &amp;quot;prefix&amp;quot; option: currently set to &amp;quot;&amp;quot;
Run `nvm use --delete-prefix v4.3.2` to unset it.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;luckily, folks at &lt;a href=&#34;https://github.com/Microsoft/BashOnWindows/issues/1683#issuecomment-279101631&#34;&gt;Bash on Windows were friendly and responsive&lt;/a&gt;.
The timeline for the fix is weeks due to that it&amp;rsquo;s a driver issue but unforunately I can&amp;rsquo;t wait as I need to do some NodeJS work related stuff on various releases.
I develop and maintain some antiquated NodeJS releases going back as far as v0.12.x hence NVM is my main tool.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve switched to the previous inside build prior to 15301 - it took probably less than 5mins to do. I&amp;rsquo;m now on &lt;a href=&#34;https://blogs.windows.com/windowsexperience/2017/02/01/announcing-windows-10-insider-preview-build-15025-pc/#kwrCg1TLbgrRzLe0.97&#34;&gt;Windows Insider Preview Build 15025.100&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;update&#34;&gt;Update&lt;/h3&gt;

&lt;p&gt;Make sure to set &lt;code&gt;Pause Updates&lt;/code&gt; to &lt;code&gt;on&lt;/code&gt; to avoid re-installing the latest build 15031 when you restart your PC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://www.mindginative.com/images/windows-insider-build-15031.png&#34; width=&#34;800&#34; alt=&#34;Advanced Options&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Enjoy!&lt;/p&gt;

&lt;h3 id=&#34;referrences&#34;&gt;Referrences&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/Microsoft/BashOnWindows/issues/1683&#34;&gt;https://github.com/Microsoft/BashOnWindows/issues/1683&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.windows.com/windowsexperience/2017/02/08/announcing-windows-10-insider-preview-build-15031-pc/#zQAbyxpwEGLAdWvl.97&#34;&gt;https://blogs.windows.com/windowsexperience/2017/02/08/announcing-windows-10-insider-preview-build-15031-pc/#zQAbyxpwEGLAdWvl.97&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blogs.windows.com/windowsexperience/2017/02/01/announcing-windows-10-insider-preview-build-15025-pc/#kwrCg1TLbgrRzLe0.97&#34;&gt;https://blogs.windows.com/windowsexperience/2017/02/01/announcing-windows-10-insider-preview-build-15025-pc/#kwrCg1TLbgrRzLe0.97&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>